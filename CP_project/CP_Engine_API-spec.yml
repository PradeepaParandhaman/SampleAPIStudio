openapi: 3.0.0
info:
  version: 1.0.0
  title: Control Plane Engine APIs
  description: >-
    This API is internal to the API Control plane and is used solely by the
    Engine microservice. The resources exposed in this API serve as a
    intermediary between the server and the client.
  summary: test
  termsOfService: test
  contact:
    name: Pradeepa
    url: http://test.com
    email: Pradeepa.Parandhaman@ibm.com
servers:
  - url: '{protocol}://{hostname}:{port}'
    description: This is the endpoint where the Engine API is accessible from the server.
    variables:
      protocol:
        default: https`
        enum:
          - http
          - https
        description: >-
          The protocol supported by the server - HTTP or HTTPS. Default is
          HTTPS.
      hostname:
        default: localhost
        description: >-
          The domain name of the server where the API is hosted. The hostname
          must be resolvable by the DNS lookup.
      port:
        default: '443'
        description: >-
          The port number where the REST API is running on the server. The
          default port for HTTPS is 443 and HTTP is 80 but it can also be any
          valid port.
paths:
  /api/engine/health/liveness:
    summary: engine_liveness
    description: This resource is used to check the liveness of the engine microservice.
    get:
      description: This method returns the liveness of the engine microservice.
      responses:
        '200':
          description: >-
            This status code indicates that the engine microservice is
            available.
        '503':
          description: >-
            This status code indicates that the engine microservice is
            unavailable.
  /api/engine/health/readiness:
    summary: engine_readiness
    description: This resource is used check the readiness of the engine microservice.
    get:
      description: >-
        This method tells whether the engine microservice is ready to accept
        traffic.
      responses:
        '200':
          description: >-
            This status code indicates that the engine microservice is ready to
            accept traffic.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicroserviceStatus'
        '503':
          description: >-
            This status code indicates that the engine microservice is not ready
            to accept traffic.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicroserviceStatus'
  /api/engine/v1/dashboard-statistics:
    summary: dashboard statistics
    description: >-
      This resource fetches Dataplane, Runtime and API statistics to display it
      in dashboard. The details include Status of the Dataplane/Runtime, the
      time duration in which the Dataplane/Runtime is present in this Status,
      location details, active/inactive runtimes and apis count etc,
    post:
      description: >-
        This resource fetches Dataplane, Runtime and API statistics to display
        it in dashboard. The details include Status of the Dataplane/Runtime,
        the time duration in which the Dataplane/Runtime is present in this
        Status, location details, active/inactive runtimes and apis count etc,
      parameters:
        - name: persona
          in: query
          description: >-
            The persona or the role of the user, whether Platform provider or
            Product Manager
          required: true
          schema:
            type: string
          example: APIPP
      requestBody:
        description: The time duration in which to fetchthe status information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeRange'
            example:
              from: '1673352361557'
              to: '1673355631997'
      responses:
        '200':
          description: >-
            This status code indicates that the statistics information is
            fetched successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusInfo'
              example:
                dataplanes:
                  - id: ZwVToIUBKkCw2RAtOQ0X
                    name: Dataplane
                    status: RED
                    timeInStatus: PT0S
                    capacity: 0
                    runtimeIds: []
                runtimes:
                  - id: de61415f-f943-414a-8737-9786757ff890
                    name: DSM prod
                    deploymentType: PRIVATE_CLOUD
                    region: null
                    location: Frankfurt
                    latitude: 50.1136
                    longitude: 8.6797
                    status: RED
                    previousStatus: null
                    timeInStatus: PT464842H15M58.118S
                    capacity: 0
                    noOfActiveApis: 0
                    noOfInactiveApis: 0
                statisticsMap:
                  APIS_ACTIVE: 0
                  RUNTIMES_INACTIVE: 1
                  APIS_INACTIVE: 0
                  RUNTIMES_ACTIVE: 0
                  DATA_PLANES_EMPTY: 0
                  DATA_PLANES_IN_USE: 1
        '401':
          description: >-
            This status code indicates that either the user did not provide any
            user credentials or the user does not have access rights to retrieve
            the status of persona.
        '500':
          $ref: '#/components/responses/internal_server_error'
  /api/engine/v1/runtime-status:
    summary: runtime status
    description: >-
      This resource fetches Runtimes status, it contains current status of
      runtime, time in current status, previous status of runtime, time in
      previous status and heart beat sync interval.
    post:
      description: >-
        This resource fetches Runtimes status, it contains current status of
        runtime, time in current status, previous status of runtime, time in
        previous status and heart beat sync interval.
      requestBody:
        description: List of runtimeIds to fetchthe status information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuntimeIdsList'
            example:
              - ea488aed-2588-4988-990d-8342d0bca78
              - bt488aed-2588-4988-990d-8342d0bca78
      responses:
        '200':
          description: >-
            This status code indicates that the runtime status information is
            fetched successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeStatusInfo'
              example:
                - runtimeId: ea488aed-2588-4988-990d-8342d0bca78
                  currentStatus: RED
                  timeInCurrentStatus: PT66H36M24.134S
                  previousStatus: GREEN
                  timeInPreviousStatus: PT3M20.487S
                  heartBeatSyncInterval: 10
                - runtimeId: bt488aed-2588-4988-990d-8342d0bca78
                  currentStatus: GREEN
                  timeInCurrentStatus: PT69H33M58.343S
                  previousStatus: RED
                  timeInPreviousStatus: PT1H31M59.988S
                  heartBeatSyncInterval: 60
        '401':
          description: >-
            This status code indicates that either the user did not provide any
            user credentials or the user does not have access rights to retrieve
            the status of persona.
        '500':
          $ref: '#/components/responses/internal_server_error'
  /api/engine/v1/runtimes-performance-status:
    summary: >-
      This api will fetch data that will be used to calculate the runtime's
      current and previous performance.
    description: >-
      This resource fetches Runtimes error rate and latency data, so that the
      performance will be displayed in the ui using this data. This api will
      also fetch the time stamps according to error rate and latency, this
      timestamps data will be useful to dislay the duration of the performance.
    post:
      description: >-
        This resource fetches Runtimes error rate and latency data, so that the
        performance will be displayed in the ui using this data, the data
        contains currentTimestamp, currentErrorRate, currentLatency,
        previousTimestamp, previousErrorRate, previousLatency,
        previousToPreviousTimestamp, transactionCount.
      requestBody:
        description: List of runtimeIds to fetch the runtime performance information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformanceStatusPayload'
            example:
              runtimeIds:
                - ea488aed-2588-4988-990d-8342d0bca78
              latencyThreshold: 10
              errorRateThreshold: 5
      responses:
        '200':
          description: >-
            This status code indicates that the performance information is
            fetched successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimePerformanceInfo'
              example:
                - runtimeId: ea488aed-2588-4988-990d-8342d0bca78
                  currentTimestamp: 1692973113042
                  currentErrorRate: 16.25
                  currentLatency: 7.03
                  previousTimestamp: 1692970633043
                  previousErrorRate: 12.04
                  previousLatency: 107
                  previousToPreviousTimestamp: 1692965009691
                  transactionCount: 1045
        '401':
          description: >-
            This status code indicates that either the user did not provide any
            user credentials or the user does not have access rights to retrieve
            the status of persona.
        '500':
          $ref: '#/components/responses/internal_server_error'
  /streams/api/engine/v1/monitoring:
    summary: Runtime and API monitoring
    description: >-
      This resource fetches the runtimes and APIs metrics data from the given
      token.
    get:
      description: >-
        This resource fetches the runtimes and APIs metrics data from the given
        token.
      parameters:
        - name: token
          in: query
          description: >-
            Token that will fetch the user stored metrics collector parameters
            such as from time, to time, runtime Ids, API Ids.
          required: true
          schema:
            type: string
          example: c0777ae6-371a-4714-acc8-72aea0344eae
      responses:
        '201':
          description: >-
            This status code indicates that the monitoring information is
            fetched successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsInfo'
              example:
                - assetId: pet_store
                  assetType: RUNTIME
                  timestamps:
                    - 1692975493414
                    - 1692975503415
                    - 1692975513414
                    - 1692975523414
                    - 1692975533415
                    - 1692975543414
                    - 1692975553414
                    - 1692975563414
                    - 1692975573414
                    - 1692975603414
                    - 1692975613415
                    - 1692975623414
                    - 1692975633415
                    - 1692975643414
                    - 1692975653414
                    - 1692975663414
                    - 1692975673415
                    - 1692975683414
                    - 1692975693414
                    - 1692975703414
                    - 1692975713415
                    - 1692975723414
                    - 1692975733414
                    - 1692975743415
                    - 1692975753414
                    - 1692975763414
                    - 1692975773415
                    - 1692975783414
                    - 1692975793414
                    - 1692975803415
                    - 1692975813414
                    - 1692975823415
                    - 1692975833415
                  transactions:
                    - 1
                    - 56
                    - 10
                    - 289
                    - 19
                    - 0
                    - 9
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 157
                    - 247
                    - 0
                    - 129
                    - 146
                    - 55
                    - 69
                    - 90
                    - 34
                    - 58
                    - 14
                    - 167
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                  errorCounts:
                    - 1
                    - 5
                    - 2
                    - 3
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 2
                    - 0
                    - 0
                    - 0
                    - 1
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 7
                    - 0
                    - 0
                    - 0
                    - 1
                    - 0
                    - 5
                    - 0
                    - 9
                    - 3
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                  responseTimes:
                    - 1.3
                    - 0
                    - 0
                    - 2.5
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 4.7
                    - 0
                    - 0
                    - 0
                    - 0.08
                    - 0.01
                    - 0.7
                    - 0.2
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                  latencies:
                    - 1.3
                    - 0
                    - 0
                    - 2.5
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 4.7
                    - 0
                    - 0
                    - 0
                    - 0.08
                    - 0.01
                    - 0.7
                    - 0.2
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                    - 0
                  errorTypes:
                    - SUCCESS_CODE
                    - CLIENT_ERROR_CODE
                    - SERVER_ERROR_CODE
        '401':
          description: >-
            This status code indicates that either the user did not provide any
            user credentials or the user does not have access rights to retrieve
            the status of persona.
        '500':
          $ref: '#/components/responses/internal_server_error'
  /api/engine/v1/aggregated-metrics:
    summary: Aggregated metrics for the assets.
    description: >-
      These resource will fetch the aggregated metrics for the runtimes or apis
      for the previous time from the specified timirange.
    post:
      description: >-
        These resource will fetch the aggregated metrics for the runtimes or
        apis for the previous time from the specified timirange.
      requestBody:
        description: The time duration in which to fetchthe status information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsPayload'
            example:
              runtimeIds:
                - ea488aed-2588-4988-990d-8342d0bca78
                - h6488aed-2588-4988-990d-8342d0bca78
                - ya688aed-2588-4988-990d-8342d0bca78
              apiIds:
                - ea488aed-2588-4988-990d-8342d0bca78
                - h6488aed-2588-4988-990d-8342d0bca78
                - ya688aed-2588-4988-990d-8342d0bca78
              fromTimeStamp: '1673352361557'
              toTimeStamp: '1673355631997'
              id: dr488aed-2588-4988-990d-8342d0bca78
      responses:
        '200':
          description: >-
            This status code indicates that the aggregated metrics information
            is fetched successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatedMetricsInfo'
              example:
                - assetId: pet_store
                  assetType: RUNTIME
                  availability: 0.29965279
                  errorCount: 3179
                  latency: 0.0967118
                  responseTime: 0.0967118
                  status: RED
                  transactionCount: 4584
        '401':
          description: >-
            This status code indicates that either the user did not provide any
            user credentials or the user does not have access rights to retrieve
            the status of persona.
        '500':
          $ref: '#/components/responses/internal_server_error'
  /api/engine/v1/monitoring-token:
    summary: >-
      This will store the payload that fetches monitorng data then retirns a
      tocken, this tocken can use to fetch the stored metrics payload, the
      stored data wil automatically delete from the elasticsearch within 30
      minutes then tocken will expire.
    description: >-
      These resource will store the payload that fetches monitorng data then
      retirns a tocken, this tocken can use to fetch the stored metrics payload,
      the stored data wil automatically delete from the elasticsearch within 30
      minutes then tocken will expire.
    post:
      description: >-
        These resource will store the payload that fetches monitorng data then
        retirns a tocken, this tocken can use to fetch the stored metrics
        payload, the stored data wil automatically delete from the elasticsearch
        within 30 minutes then tocken will expire.
      requestBody:
        description: The time duration in which to fetchthe status information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsPayload'
            example:
              runtimeIds:
                - ea488aed-2588-4988-990d-8342d0bca78
                - h6488aed-2588-4988-990d-8342d0bca78
                - ya688aed-2588-4988-990d-8342d0bca78
              apiIds:
                - ea488aed-2588-4988-990d-8342d0bca78
                - h6488aed-2588-4988-990d-8342d0bca78
                - ya688aed-2588-4988-990d-8342d0bca78
              from: '1673352361557'
              to: '1673355631997'
              id: dr488aed-2588-4988-990d-8342d0bca78
      responses:
        '200':
          description: >-
            This status code indicates that the monitoring token fetched
            successfully.
          content:
            text/plain:
              schema:
                type: string
                description: >-
                  string token that can used to fetch metrics payload stored and
                  it will valid for 3om minutes after that it will get expired.
                example: 35d0d495-7ef2-45c1-ae4f-12cdaa31c07c
              example: 35d0d495-7ef2-45c1-ae4f-12cdaa31c07c
        '401':
          description: >-
            This status code indicates that either the user did not provide any
            user credentials or the user does not have access rights to retrieve
            the status of persona.
        '500':
          $ref: '#/components/responses/internal_server_error'
  /api/engine/v1/runtimes/{runtime_id}/last-sync-timestamps:
    summary: Getting runtime's last sync metric and heartbeat timestamps
    description: This resource fetches the last sync metric and heartbeat timestamps
    get:
      parameters:
        - name: runtime_id
          in: path
          description: RUNTIME UUID.
          schema:
            type: string
          example: d3841d21-ef31-4b95-a82a-ed08f10a20e5
          required: true
      responses:
        '200':
          description: >-
            This status code indicates the successful retrieval of last sync
            timestamps of a runtime.
          content:
            application/json:
              schema:
                $ref: '#components/schemas/LastSyncTimestampsResponseBody'
              example:
                runtimeId: d3841d21-ef31-4b95-a82a-ed08f10a20e5
                metricLastSyncTime: 1714971234000
                heartbeatLastSyncTime: 1714971264000
        '401':
          description: >-
            This status code indicates that either the user did not provide any
            user credentials or the user does not have access rights to retrieve
            the status of persona.
        '500':
          $ref: '#/components/responses/internal_server_error'
  /streams/api/engine/v1/heartbeats:
    summary: Runtime heartbeats
    description: This resource fetches the runtimes heartbeats from the given token.
    get:
      description: This resource fetches the runtimes heartbeats from the given token.
      parameters:
        - name: token
          in: query
          description: >-
            Token that will fetch the user stored metrics collector parameters
            such as from time, to time, runtime Ids, API Ids.
          required: true
          schema:
            type: string
          example: c0777ae6-371a-4714-acc8-72aea0344eae
      responses:
        '201':
          description: >-
            This status code indicates that the heartbeat information is fetched
            successfully, and it will send the data as streams.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeartbeatsData'
              example:
                - runtimeId: ea488aed-2588-4988-990d-8342d0bca78
                  timestamps:
                    - 1692975493414
                    - 1692975503415
                    - 1692975513414
                    - 1692975523414
                    - 1692975533415
                    - 1692975543414
                    - 1692975553414
                    - 1692975563414
                    - 1692975573414
                    - 1692975603414
                    - 1692975613415
                    - 1692975623414
                    - 1692975633415
                    - 1692975643414
                    - 1692975653414
                    - 1692975663414
                    - 1692975673415
                    - 1692975683414
                    - 1692975693414
                    - 1692975703414
                    - 1692975713415
                    - 1692975723414
                    - 1692975733414
                    - 1692975743415
                    - 1692975753414
                    - 1692975763414
                    - 1692975773415
                    - 1692975783414
                    - 1692975793414
                    - 1692975803415
                    - 1692975813414
                    - 1692975823415
                    - 1692975833415
                  heartbeats:
                    - 1
                    - 1
                    - 1
                    - 1
                    - 1
                    - 0
                    - 1
                    - 1
                    - 1
        '401':
          description: >-
            This status code indicates that either the user did not provide any
            user credentials or the user does not have access rights to retrieve
            the status of persona.
        '500':
          $ref: '#/components/responses/internal_server_error'
  /v1/initialize-tenant:
    summary: tenant initilization
    description: >-
      This resource initializes a tenant and is responsible for creating
      necessary indices for this microservice with respective settings/mappings
    post:
      description: >-
        This method initializes a tenant and is responsible for creating
        necessary indices for this microservice with respective
        settings/mappings
      parameters:
        - in: header
          name: X-APICP-TENANT-ID
          description: Tenant which needs to be initialized
          schema:
            type: string
      responses:
        '200':
          description: This status code indicates that tenant is successfully initialized.
        '401':
          description: >-
            This status code indicates that either the user did not provide any
            user credentials or the user does not have access rights to retrieve
            the status of persona.
        '500':
          $ref: '#/components/responses/internal_server_error'
  /api/engine/v1/aggregated-monitoring:
    summary: Aggregated Runtime and API monitoring data.
    description: >-
      This resource fetches the runtimes and APIs metrics data from the given
      token.
    get:
      description: >-
        This resource fetches the runtimes and APIs metrics data from the given
        token.
      parameters:
        - name: token
          in: query
          description: >-
            Token that will fetch the user stored metrics collector parameters
            such as from time, to time, runtime Ids, API Ids.
          required: true
          schema:
            type: string
          example: c0777ae6-371a-4714-acc8-72aea0344eae
        - name: interval
          in: query
          description: Interval by which metrics to be aggregated to form a datapoint.
          required: true
        - name: aggStatusLevel
          in: query
          description: >-
            Toggle which determines if the response should be have metrics by
            status code or overall metrics.
          required: true
          schema:
            type: boolean
          example: false
      responses:
        '201':
          description: >-
            This status code indicates that the monitoring information is
            fetched successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitoringDataPointModel'
        '401':
          description: >-
            This status code indicates that either the user did not provide any
            user credentials or the user does not have access rights to retrieve
            the status of persona.
        '500':
          $ref: '#/components/responses/internal_server_error'
  /api/engine/v1/aggregated-runtime-metrics:
    summary: Aggregated Runtime Metrics
    description: >-
      This resource fetches the aggregated runtime metrics data from the given
      token.
    get:
      description: >-
        This resource fetches the aggregated runtime metrics data from the given
        token.
      parameters:
        - name: token
          in: query
          description: >-
            Token that will fetch the user stored metrics collector parameters
            such as from time, to time, runtime Ids, API Ids.
          required: true
          schema:
            type: string
          example: c0777ae6-371a-4714-acc8-72aea0344eae
      responses:
        '201':
          description: >-
            This status code indicates that the Runtime metrics information is
            fetched successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuntimeDataPointMetricsModel'
        '401':
          description: >-
            This status code indicates that either the user did not provide any
            user credentials or the user does not have access rights to retrieve
            the status of persona.
        '500':
          $ref: '#/components/responses/internal_server_error'
  /api/engine/v1/aggregated-api-metrics:
    summary: Aggregated API Metrics
    description: >-
      This resource fetches the aggregated API's metrics data from the given
      token.
    get:
      description: >-
        This resource fetches the aggregated API's metrics data from the given
        token.
      parameters:
        - name: token
          in: query
          description: >-
            Token that will fetch the user stored metrics collector parameters
            such as from time, to time, runtime Ids, API Ids.
          required: true
          schema:
            type: string
          example: c0777ae6-371a-4714-acc8-72aea0344eae
      responses:
        '201':
          description: >-
            This status code indicates that the API information is fetched
            successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsInfo'
              example:
                - apiTransactionMetricsList:
                    - apiId: fe819476-44cd-48a4-9bf0-094e35aaef1a
                      apiName: Bunny_API
                      apiVersion: 1.0.6
                      apiMetrics:
                        transactionCount: 20
                        averageLatency: 10.5
                        averageBackendResponseTime: 15.9
                        averageResponseTime: 58.9
                      metricsByStatusCode:
                        2xx:
                          transactionCount: 20
                          averageLatency: 10.5
                          averageBackendResponseTime: 15.9
                          averageResponseTime: 58.9
                        3xx:
                          transactionCount: 20
                          averageLatency: 10.5
                          averageBackendResponseTime: 15.9
                          averageResponseTime: 58.9
                        4xx:
                          transactionCount: 20
                          averageLatency: 10.5
                          averageBackendResponseTime: 15.9
                          averageResponseTime: 58.9
                        5xx:
                          transactionCount: 20
                          averageLatency: 10.5
                          averageBackendResponseTime: 15.9
                          averageResponseTime: 58.9
                  runtimeTransactionMetrics:
                    apiMetrics:
                      transactionCount: 230
                      averageLatency: 10.5
                      averageBackendResponseTime: 15.9
                      averageResponseTime: 58.9
                    metricsByStatusCode:
                      2xx:
                        transactionCount: 20
                        averageLatency: 10.5
                        averageBackendResponseTime: 15.9
                        averageResponseTime: 58.9
                      3xx:
                        transactionCount: 20
                        averageLatency: 120.5
                        averageBackendResponseTime: 15.9
                        averageResponseTime: 58.9
                      4xx:
                        transactionCount: 200
                        averageLatency: 10.5
                        averageBackendResponseTime: 15.9
                        averageResponseTime: 58.9
                      5xx:
                        transactionCount: 20
                        averageLatency: 110.5
                        averageBackendResponseTime: 15.9
                        averageResponseTime: 58.9
                  timestamp: 1733912158000
        '401':
          description: >-
            This status code indicates that either the user did not provide any
            user credentials or the user does not have access rights to retrieve
            the status of persona.
        '500':
          $ref: '#/components/responses/internal_server_error'
components:
  schemas:
    MicroServiceComponentStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Status of a particular component in the microservice.
        details:
          type: object
          description: Additional details about the component status.
          additionalProperties: true
    MicroserviceStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Overall status of the microservice.
        components:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MicroServiceComponentStatus'
    TimeRange:
      type: object
      properties:
        from:
          type: number
          description: From the date and time.
          example: 1673352361557
        to:
          type: number
          description: to the date and time.
          example: 1673352361997
    RuntimeIdsList:
      type: object
      description: list of runtime ids.
      example: ea488aed-2588-4988-990d-8342d0bca78
    PerformanceStatusPayload:
      type: object
      properties:
        runtimeIds:
          type: object
          description: List of runtime Ids.
          example:
            - ea488aed-2588-4988-990d-8342d0bca78
            - rn488aed-2588-4988-990d-8342d0bca69
        latencyThreshold:
          type: number
          description: User preferred latency threshold.
          example: 15
        errorRateThreshold:
          type: number
          description: User preferred error rate threshold.
          example: 10
    StatusInfo:
      type: object
      properties:
        dataplanes:
          type: object
          description: >-
            This resource fetches the Status details of Dataplane . The details
            include Status of the Dataplane, the time duration in which the
            Dataplane is present in this Status, location details, list of
            runtimes, etc,.
          items:
            $ref: '#/components/schemas/DataplaneStatus'
        runtimes:
          type: object
          description: >-
            This resource fetches the Status details of Runtime asset. The
            details include Status of the Runtime, the time duration in which
            the Runtime is present in this Status, location details, list of
            Apis etc,
          items:
            $ref: '#/components/schemas/RuntimeStatus'
        statisticsMap:
          type: object
          description: >-
            Statistics of each asset like the total count of Dataplanes in use,
            empty Dataplane, total active and incative runtimes, total active
            and Inactive Apis for a Platform Provider. Statistics of each asset
            like the total active and Inactive Apis for a ProductManager.
          items:
            type: object
            description: statisticsMap.
            properties:
              StatisticsParameters:
                type: string
                description: The statistic of each asset.
                enum:
                  - DATA_PLANES_IN_USE,
                  - DATA_PLANES_EMPTY,
                  - RUNTIMES_ACTIVE,
                  - RUNTIMES_INACTIVE,
                  - APIS_ACTIVE,
                  - APIS_INACTIVE,
                  - MY_APIS_ACTIVE,
                  - MY_APIS_INACTIVE,
                  - APPLICATIONS_ACTIVE,
                  - APPLICATIONS_INACTIVE
                example: DATA_PLANES_IN_USE
              count:
                type: integer
                description: count of StatisticsParameters.
                example: 3
    RuntimeStatus:
      type: object
      description: >-
        This schema represents the Status details of Runtime . The details
        include Status of the Runtime, the time duration in which the Runtime is
        present in this Status, location details, count of active and inactive
        Apis, etc,..
      properties:
        id:
          type: string
          description: UUID of the Runtime.
          example: ea488aed-2588-4988-990d-8342d0bca78
        name:
          type: string
          description: Name of the runtime
          example: PRIVATE_CLOUD_APIGW_Op
        deploymentType:
          type: string
          description: The type of deployment.
          enum:
            - ON_PREMISE
            - SAG_SAAS
            - PRIVATE_CLOUD
          example: ON_PREMISE
        region:
          type: string
          description: Cloud provider region
          example: us-west
        location:
          type: string
          description: Cloud provider location
          example: denver
        latitude:
          type: string
          description: Latitude of the location
          example: us-west
        longitude:
          type: string
          description: Longitude of the location
          example: denver
        status:
          type: string
          description: Status of Runtime.
          enum:
            - RED
            - YELLOW
            - GREEN
        previousStatus:
          type: string
          description: Previous Status of Runtime.
          enum:
            - RED
            - YELLOW
            - GREEN
        timeInStatus:
          type: string
          description: Time since Runtime is in current Status
        capacity:
          type: number
          description: To be decided. For now it is hardcoded as 0.
          example: denver
        noOfActiveApis:
          type: integer
          description: Number of active Apis present in this Runtime
          example: 5
        noOfInactiveApis:
          type: integer
          description: Number of inactive Apis present in this Runtime
          example: 6
    DataplaneStatus:
      type: object
      description: >-
        This schema represents the Status details of Dataplane . The details
        include Status of the Dataplane, the time duration in which the
        Dataplane is present in this Status, location details, list of runtimes,
        etc,..
      properties:
        id:
          type: string
          description: UUID of the dataplane.
          example: ea488aed-2588-4988-990d-8342d0bca78
        name:
          type: string
          description: Name of the Datplane
          example: DataPlane1
        status:
          type: string
          description: Status of Dataplane.
          enum:
            - RED
            - YELLOW
            - GREEN
        timeInStatus:
          type: object
          description: Time since dataplane is in current Status.
          example: 1673352361557
        capacity:
          type: number
          description: To be decided. For now it is hardcoded as 0..
          example: 1673352361557
        runtimeIds:
          type: object
          description: List of Runtime ids.
          items:
            type: string
          example:
            - ea488aed-2588-4988-990d-8342d0bca78
    RuntimeStatusInfo:
      type: object
      description: >-
        This schema represents the status information of runtimes. it contains
        current status of runtime, time in current status, previous status of
        runtime, time in previous status and heart beat sync interval.
      properties:
        runtimeId:
          type: string
          description: UUID of the runtime.
          example: ea488aed-2588-4988-990d-8342d0bca78
        currentStatus:
          type: string
          description: Status of Runtime.
          enum:
            - RED
            - YELLOW
            - GREEN
        timeInCurrentStatus:
          type: string
          description: Time since runtime is in current Status.
          example: PT67H7M19.214S
        previousStatus:
          type: string
          description: Status of Runtime.
          enum:
            - RED
            - YELLOW
            - GREEN
        timeInPreviousStatus:
          type: string
          description: Time since runtime is in previous Status.
          example: PT3M20.487S
        heartBeatSyncInterval:
          type: number
          description: Heartbeat sync interval of the runtime.
          example: 10
    RuntimePerformanceInfo:
      type: object
      description: >-
        This resource fetches Runtimes error rate and latency data, so that the
        performance will be displayed in the ui using this data, the data
        contains currentTimestamp, currentErrorRate, currentLatency,
        previousTimestamp, previousErrorRate, previousLatency,
        previousToPreviousTimestamp, transactionCount.
      properties:
        runtimeId:
          type: string
          description: UUID of the runtime.
          example: ea488aed-2588-4988-990d-8342d0bca78
        currentTimestamp:
          type: object
          description: current time when apis was hit to fetch data.
          example: 1673352361557
        currentErrorRate:
          type: number
          description: total error rate for the current performance.
          example: 16.25
        currentLatency:
          type: number
          description: total latency for the current performance.
          example: 10025
        previousTimestamp:
          type: object
          description: this is the time when current performance was started.
          example: 1673352361557
        previousErrorRate:
          type: number
          description: total error rate for the previous performance.
          example: 16.25
        previousLatency:
          type: number
          description: total latency for the previous performance.
          example: 10025
        previousToPreviousTimestamp:
          type: object
          description: this is the time when previous performance was started.
          example: 1673352361557
        transactionCount:
          type: integer
          description: total transactions that happened in last one hour.
          example: 16.25
    MetricsInfo:
      type: object
      description: This schema represents the metrics data for runtimes and apis.
      properties:
        assetId:
          type: string
          description: UUID of the Runtime or API
          example: ea488aed-2588-4988-990d-8342d0bca78
        assetType:
          type: string
          description: Asset type either runtime or API.
          example: RUNTIME
        timestamps:
          type: object
          description: >-
            list of timestamps those are all collected between from and to
            time-range.
          example:
            - 1692975493414
            - 1692975503415
            - 1692975513414
            - 1692975523414
        transactions:
          type: object
          description: >-
            list of numbers that defines the number of transactions happened at
            the particular time.
          example:
            - 1
            - 56
            - 10
            - 289
            - 19
            - 0
            - 9
        errorCounts:
          type: object
          description: >-
            list of numbers that defines the number of errors happened at the
            particular time.
          example:
            - 1
            - 5
            - 2
            - 3
            - 0
            - 0
            - 0
        responseTimes:
          type: object
          description: >-
            list of float and integer numbers that defines the response time at
            the particular time.
          example:
            - 1.3
            - 0
            - 0
            - 2.5
            - 0
            - 0.7
        latencies:
          type: object
          description: >-
            list of float and integer numbers that defines the latency at the
            particular time.
          example:
            - 1.3
            - 0
            - 0
            - 2.5
            - 0
            - 0
            - 5.8
            - 3
            - 0.001
        errorTypes:
          type: object
          description: >-
            List of strings that defines the type of errors happened during the
            time-range given.
          example:
            - SUCCESS_CODE
            - CLIENT_ERROR_CODE
            - SERVER_ERROR_CODE
    MetricsPayload:
      type: object
      properties:
        id:
          type: string
          description: UUID of the metrics payload.
          example: ya688aed-2588-4988-990d-8342d0bca78
        runtimeIds:
          type: object
          description: list of runtime UUIDs of the Runtime.
          example:
            - ea488aed-2588-4988-990d-8342d0bca78
            - h6488aed-2588-4988-990d-8342d0bca78
            - ya688aed-2588-4988-990d-8342d0bca78
        apiIds:
          type: object
          description: list of runtime UUIDs of the API.
          example:
            - ea488aed-2588-4988-990d-8342d0bca78
            - h6488aed-2588-4988-990d-8342d0bca78
            - ya688aed-2588-4988-990d-8342d0bca78
        fromTimeStamp:
          type: number
          description: From the date and time.
          example: 1673352361557
        toTimeStamp:
          type: number
          description: to the date and time.
          example: 1673352361997
    AggregatedMetricsInfo:
      type: object
      description: This schema represents the metrics data for runtimes and apis.
      properties:
        assetId:
          type: string
          description: UUID of the Runtime or API
          example: ea488aed-2588-4988-990d-8342d0bca78
        assetType:
          type: string
          description: Asset type either runtime or API.
          example: RUNTIME
        availability:
          type: number
          description: >-
            total availability ratio of the runtime, this value will be null for
            the api
          example: 10.2
        transactionCount:
          type: number
          description: >-
            total transactions happened in previous time-range from the given
            time-range.
          example: 15876
        errorCount:
          type: number
          description: >-
            total errors happened in previous time-range from the given
            time-range.
          example: 237
        responseTime:
          type: object
          description: >-
            total response time taken to made all transactions in previous
            time-range from the given time-range.
          example: 16.258
        latency:
          type: number
          description: >-
            total latency for the transactions happened in previous time-range
            from the given time-range.
          example: 12.05
        status:
          type: object
          description: >-
            Previous status of the runtime, this value should be null for the
            apis
          example: RED
    HeartbeatsData:
      type: object
      properties:
        runtimeId:
          type: object
          description: UUID of the Runtime.
          example: ea488aed-2588-4988-990d-8342d0bca78
        timestamps:
          type: object
          description: >-
            list of timestamps those are all collected between from and to
            time-range.
          example:
            - 1692975493414
            - 1692975503415
            - 1692975513414
            - 1692975523414
        heartbeats:
          type: object
          description: >-
            list of 0's and 1's represents the state of the runtime at the
            corresponding timestamp.
          example:
            - 1
            - 1
            - 1
            - 1
            - 1
            - 0
            - 1
            - 1
            - 1
    LastSyncTimestampsResponseBody:
      type: object
      properties:
        runtimeId:
          type: object
          description: UUID of the Runtime.
          example: ea488aed-2588-4988-990d-8342d0bca78
        metricLastSyncTime:
          type: number
          description: last mertic sync timestamp in epoch time format.
          example: 1692975493414
        heartbeatLastSyncTime:
          type: number
          description: last heartbeat sync timestamp in epoch time format.
          example: 1692975493414
    RuntimeDataPointMetricsModel:
      type: object
      properties:
        assetId:
          type: string
          example: abc24761-b84e-4363-a199-687405a9b3e2
        metrics:
          $ref: '#/components/schemas/DatapointMetrics'
        metricsByStatusCode:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DatapointMetrics'
        apiMetricsList:
          type: array
          items:
            $ref: '#/components/schemas/AssetDataPointMetricsModel'
    MonitoringDataPointModel:
      type: object
      properties:
        timestamp:
          type: number
          example: 1733903167000
        metricsList:
          type: array
          items:
            $ref: '#/components/schemas/AssetDataPointMetricsModel'
    AssetDataPointMetricsModel:
      type: object
      properties:
        assetId:
          type: string
          example: 93e24761-b84e-4363-a199-687405a9b3e2
        metrics:
          $ref: '#/components/schemas/DatapointMetrics'
        metricsByStatusCode:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DatapointMetrics'
    DatapointMetrics:
      type: object
      properties:
        transactionCount:
          type: number
          example: 10
        averageLatency:
          type: number
          example: 23.56
        averageResponseTime:
          type: number
          example: 13.78
        errorCount:
          type: number
          example: 4
    newSchema:
      $ref: '#/components/schemas/MicroServiceComponentStatus'
  responses:
    internal_server_error:
      description: Internal server error
      content:
        application/json:
          example:
            errorDetails:
              - This response indicates that the server encountered an error.
  securitySchemes:
    basic_authentication:
      type: http
      description: >-
        This is the Basic Authentication mechanism where the credentials are
        sent in a Base64 encoded format of the form <username>:<password> in the
        Authorization header.
      scheme: basic
security:
  - basic_authentication: []
tags:
  - name: test
    description: ''
    externalDocs:
      url: ''
      description: ''
externalDocs:
  url: http://test.com
  description: ''
