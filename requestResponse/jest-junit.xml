<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="223" failures="0" errors="0" time="8.669">
  <testsuite name="AddApiComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:18" time="4.056" tests="2">
    <testcase classname="AddApiComponent renders AddApiModal when isOpen is true" name="AddApiComponent renders AddApiModal when isOpen is true" time="0.033">
    </testcase>
    <testcase classname="AddApiComponent does not render AddApiModal when isOpen is false" name="AddApiComponent does not render AddApiModal when isOpen is false" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="RootComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:18" time="5.36" tests="1">
    <testcase classname="RootComponent renders without crashing" name="RootComponent renders without crashing" time="0.101">
    </testcase>
  </testsuite>
  <testsuite name="CreateNewProjectComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:18" time="5.41" tests="4">
    <testcase classname="CreateNewProjectComponent renders component with tabs" name="CreateNewProjectComponent renders component with tabs" time="0.014">
    </testcase>
    <testcase classname="CreateNewProjectComponent validateForm calls correct ref method" name="CreateNewProjectComponent validateForm calls correct ref method" time="0.007">
    </testcase>
    <testcase classname="CreateNewProjectComponent getValues calls correct ref method" name="CreateNewProjectComponent getValues calls correct ref method" time="0.006">
    </testcase>
    <testcase classname="CreateNewProjectComponent clicks the local folder tab" name="CreateNewProjectComponent clicks the local folder tab" time="0.106">
    </testcase>
  </testsuite>
  <testsuite name="should test the rendering of ProjectTable component" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:18" time="5.604" tests="2">
    <testcase classname="should test the rendering of ProjectTable component should render the ProjectTable component if rootDirectoryHandles are present" name="should test the rendering of ProjectTable component should render the ProjectTable component if rootDirectoryHandles are present" time="0.142">
    </testcase>
    <testcase classname="should test the rendering of ProjectTable component should navigate to development component if rootDirectoryHandles are empty" name="should test the rendering of ProjectTable component should navigate to development component if rootDirectoryHandles are empty" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="FormViewGenericTableComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:18" time="5.989" tests="4">
    <testcase classname="FormViewGenericTableComponent renders the table with data" name="FormViewGenericTableComponent renders the table with data" time="0.162">
    </testcase>
    <testcase classname="FormViewGenericTableComponent renders empty state for table" name="FormViewGenericTableComponent renders empty state for table" time="0.02">
    </testcase>
    <testcase classname="FormViewGenericTableComponent calls onDelete when delete button is clicked" name="FormViewGenericTableComponent calls onDelete when delete button is clicked" time="0.12">
    </testcase>
    <testcase classname="FormViewGenericTableComponent calls onButtonClick when the button is clicked" name="FormViewGenericTableComponent calls onButtonClick when the button is clicked" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="ApiFromUrlForm" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:23" time="0.587" tests="9">
    <testcase classname="ApiFromUrlForm renders form inputs correctly" name="ApiFromUrlForm renders form inputs correctly" time="0.014">
    </testcase>
    <testcase classname="ApiFromUrlForm validates form inputs correctly" name="ApiFromUrlForm validates form inputs correctly" time="0.166">
    </testcase>
    <testcase classname="ApiFromUrlForm validates form inputs correctly when empty" name="ApiFromUrlForm validates form inputs correctly when empty" time="0.093">
    </testcase>
    <testcase classname="ApiFromUrlForm toggles username/password fields on checkbox click" name="ApiFromUrlForm toggles username/password fields on checkbox click" time="0.016">
    </testcase>
    <testcase classname="ApiFromUrlForm triggers onEnterPress when Enter key is pressed in a field" name="ApiFromUrlForm triggers onEnterPress when Enter key is pressed in a field" time="0.007">
    </testcase>
    <testcase classname="ApiFromUrlForm validates username and password when &apos;Protected&apos; is checked" name="ApiFromUrlForm validates username and password when &apos;Protected&apos; is checked" time="0.045">
    </testcase>
    <testcase classname="ApiFromUrlForm returns correct form values from getValues()" name="ApiFromUrlForm returns correct form values from getValues()" time="0.028">
    </testcase>
    <testcase classname="ApiFromUrlForm allows adding tags and reflects them in getValues()" name="ApiFromUrlForm allows adding tags and reflects them in getValues()" time="0.024">
    </testcase>
    <testcase classname="ApiFromUrlForm resets the form when resetForm is called" name="ApiFromUrlForm resets the form when resetForm is called" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="AddApiModal" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:18" time="6.18" tests="2">
    <testcase classname="AddApiModal renders modal when isOpen is true" name="AddApiModal renders modal when isOpen is true" time="0.135">
    </testcase>
    <testcase classname="AddApiModal calls setSelectedApi and onClose when a card is clicked" name="AddApiModal calls setSelectedApi and onClose when a card is clicked" time="0.113">
    </testcase>
  </testsuite>
  <testsuite name="Source Control Component" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:18" time="6.318" tests="16">
    <testcase classname="Source Control Component Renders Source Control Component" name="Source Control Component Renders Source Control Component" time="0.179">
    </testcase>
    <testcase classname="Source Control Component Commit and push implementation Error when Commit message is empty on clicking commit" name="Source Control Component Commit and push implementation Error when Commit message is empty on clicking commit" time="0.106">
    </testcase>
    <testcase classname="Source Control Component Commit and push implementation Error when active is not set" name="Source Control Component Commit and push implementation Error when active is not set" time="0.026">
    </testcase>
    <testcase classname="Source Control Component Commit and push implementation Error when Commit failed" name="Source Control Component Commit and push implementation Error when Commit failed" time="0.074">
    </testcase>
    <testcase classname="Source Control Component Commit and push implementation Success Commit scenario" name="Source Control Component Commit and push implementation Success Commit scenario" time="0.075">
    </testcase>
    <testcase classname="Source Control Component Pull Implementation Error when active is not set" name="Source Control Component Pull Implementation Error when active is not set" time="0.013">
    </testcase>
    <testcase classname="Source Control Component Pull Implementation Have latest changes" name="Source Control Component Pull Implementation Have latest changes" time="0.019">
    </testcase>
    <testcase classname="Source Control Component Pull Implementation Success pull scenario" name="Source Control Component Pull Implementation Success pull scenario" time="0.024">
    </testcase>
    <testcase classname="Source Control Component Pull Implementation Conflicts on pull" name="Source Control Component Pull Implementation Conflicts on pull" time="0.165">
    </testcase>
    <testcase classname="Source Control Component Pull Implementation conflict resolution Accept Incoming changes - error" name="Source Control Component Pull Implementation conflict resolution Accept Incoming changes - error" time="0.092">
    </testcase>
    <testcase classname="Source Control Component Pull Implementation conflict resolution Accept Incoming changes - success" name="Source Control Component Pull Implementation conflict resolution Accept Incoming changes - success" time="0.115">
    </testcase>
    <testcase classname="Source Control Component Pull Implementation conflict resolution Accept Current changes - success" name="Source Control Component Pull Implementation conflict resolution Accept Current changes - success" time="0.045">
    </testcase>
    <testcase classname="Source Control Component Stage and unstage implementation Stage a file" name="Source Control Component Stage and unstage implementation Stage a file" time="0.022">
    </testcase>
    <testcase classname="Source Control Component Stage and unstage implementation Stage all unstaged file" name="Source Control Component Stage and unstage implementation Stage all unstaged file" time="0.015">
    </testcase>
    <testcase classname="Source Control Component Stage and unstage implementation Unstage a file" name="Source Control Component Stage and unstage implementation Unstage a file" time="0.021">
    </testcase>
    <testcase classname="Source Control Component Stage and unstage implementation Unstage all staged file" name="Source Control Component Stage and unstage implementation Unstage all staged file" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="HomeComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:18" time="6.328" tests="3">
    <testcase classname="HomeComponent renders welcome messages correctly" name="HomeComponent renders welcome messages correctly" time="0.052">
    </testcase>
    <testcase classname="HomeComponent renders Links with correct text and icons" name="HomeComponent renders Links with correct text and icons" time="0.029">
    </testcase>
    <testcase classname="HomeComponent renders Links with correct text and icons" name="HomeComponent renders Links with correct text and icons" time="0.26">
    </testcase>
  </testsuite>
  <testsuite name="EmptyGatewayComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:24" time="0.422" tests="4">
    <testcase classname="EmptyGatewayComponent should render the empty state with correct text and button" name="EmptyGatewayComponent should render the empty state with correct text and button" time="0.045">
    </testcase>
    <testcase classname="EmptyGatewayComponent should show the ConfigureNewGatewayComponent modal when &quot;Configure gateway&quot; is clicked" name="EmptyGatewayComponent should show the ConfigureNewGatewayComponent modal when &quot;Configure gateway&quot; is clicked" time="0.045">
    </testcase>
    <testcase classname="EmptyGatewayComponent should close the modal when the close button is clicked" name="EmptyGatewayComponent should close the modal when the close button is clicked" time="0.01">
    </testcase>
    <testcase classname="EmptyGatewayComponent should call onRefresh when the modal triggers the refresh" name="EmptyGatewayComponent should call onRefresh when the modal triggers the refresh" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Deploy Component tests" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:18" time="6.458" tests="10">
    <testcase classname="Deploy Component tests should render the component" name="Deploy Component tests should render the component" time="0.237">
    </testcase>
    <testcase classname="Deploy Component tests should be able to select gateway" name="Deploy Component tests should be able to select gateway" time="0.094">
    </testcase>
    <testcase classname="Deploy Component tests should be able close select gateway modal" name="Deploy Component tests should be able close select gateway modal" time="0.073">
    </testcase>
    <testcase classname="Deploy Component tests should be able to configure a gateway" name="Deploy Component tests should be able to configure a gateway" time="0.12">
    </testcase>
    <testcase classname="Deploy Component tests should be able to close configure gateway modal" name="Deploy Component tests should be able to close configure gateway modal" time="0.161">
    </testcase>
    <testcase classname="Deploy Component tests should not be able to show deploy modal before selecting gateway" name="Deploy Component tests should not be able to show deploy modal before selecting gateway" time="0.065">
    </testcase>
    <testcase classname="Deploy Component tests should throw an error if fetch gateway failed" name="Deploy Component tests should throw an error if fetch gateway failed" time="0.061">
    </testcase>
    <testcase classname="Deploy Component tests should be able to see password input screen" name="Deploy Component tests should be able to see password input screen" time="0.055">
    </testcase>
    <testcase classname="Deploy Component tests should be able to validate password" name="Deploy Component tests should be able to validate password" time="0.103">
    </testcase>
    <testcase classname="Deploy Component tests should be able to deploy" name="Deploy Component tests should be able to deploy" time="0.181">
    </testcase>
  </testsuite>
  <testsuite name="GatewaySettingsComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:24" time="0.851" tests="3">
    <testcase classname="GatewaySettingsComponent renders loading state initially" name="GatewaySettingsComponent renders loading state initially" time="0.003">
    </testcase>
    <testcase classname="GatewaySettingsComponent renders EmptyGatewayComponent when gateway is empty" name="GatewaySettingsComponent renders EmptyGatewayComponent when gateway is empty" time="0.03">
    </testcase>
    <testcase classname="GatewaySettingsComponent renders EmptyGatewayComponent when gateway is empty" name="GatewaySettingsComponent renders EmptyGatewayComponent when gateway is empty" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Open API Components - Formview" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:18" time="6.658" tests="2">
    <testcase classname="Open API Components - Formview renders successfully" name="Open API Components - Formview renders successfully" time="0.557">
    </testcase>
    <testcase classname="Open API Components - Formview should navigate to development component if view mode is code" name="Open API Components - Formview should navigate to development component if view mode is code" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="SetupFolderComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:24" time="0.212" tests="5">
    <testcase classname="SetupFolderComponent renders the component with initial data" name="SetupFolderComponent renders the component with initial data" time="0.023">
    </testcase>
    <testcase classname="SetupFolderComponent validates folder label correctly" name="SetupFolderComponent validates folder label correctly" time="0.013">
    </testcase>
    <testcase classname="SetupFolderComponent validates folder path correctly" name="SetupFolderComponent validates folder path correctly" time="0.002">
    </testcase>
    <testcase classname="SetupFolderComponent handles browse button click and updates path" name="SetupFolderComponent handles browse button click and updates path" time="0.011">
    </testcase>
    <testcase classname="SetupFolderComponent returns the correct values through imperative handle" name="SetupFolderComponent returns the correct values through imperative handle" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="NewProjectComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:24" time="0.383" tests="6">
    <testcase classname="NewProjectComponent renders the modal with default inputs" name="NewProjectComponent renders the modal with default inputs" time="0.078">
    </testcase>
    <testcase classname="NewProjectComponent calls the directory picker when the &quot;Browse&quot; button is clicked" name="NewProjectComponent calls the directory picker when the &quot;Browse&quot; button is clicked" time="0.048">
    </testcase>
    <testcase classname="NewProjectComponent sets the folder label when user types in the label input" name="NewProjectComponent sets the folder label when user types in the label input" time="0.016">
    </testcase>
    <testcase classname="NewProjectComponent calls addRootDirectory and onRefresh when &quot;Create&quot; button is clicked" name="NewProjectComponent calls addRootDirectory and onRefresh when &quot;Create&quot; button is clicked" time="0.037">
    </testcase>
    <testcase classname="NewProjectComponent closes the modal without calling addRootDirectory when &quot;Cancel&quot; button is clicked" name="NewProjectComponent closes the modal without calling addRootDirectory when &quot;Cancel&quot; button is clicked" time="0.016">
    </testcase>
    <testcase classname="NewProjectComponent shows an error if directory picker is not supported" name="NewProjectComponent shows an error if directory picker is not supported" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="ConfigureNewGatewayComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:24" time="0.71" tests="7">
    <testcase classname="ConfigureNewGatewayComponent should render the modal and form fields" name="ConfigureNewGatewayComponent should render the modal and form fields" time="0.113">
    </testcase>
    <testcase classname="ConfigureNewGatewayComponent should update input values on change" name="ConfigureNewGatewayComponent should update input values on change" time="0.04">
    </testcase>
    <testcase classname="ConfigureNewGatewayComponent should display validation errors on invalid submission" name="ConfigureNewGatewayComponent should display validation errors on invalid submission" time="0.06">
    </testcase>
    <testcase classname="ConfigureNewGatewayComponent should add a tag when Enter is pressed" name="ConfigureNewGatewayComponent should add a tag when Enter is pressed" time="0.034">
    </testcase>
    <testcase classname="ConfigureNewGatewayComponent should remove a tag when the close button is clicked" name="ConfigureNewGatewayComponent should remove a tag when the close button is clicked" time="0.074">
    </testcase>
    <testcase classname="ConfigureNewGatewayComponent should call the addGateway method on valid form submission" name="ConfigureNewGatewayComponent should call the addGateway method on valid form submission" time="0.09">
    </testcase>
    <testcase classname="ConfigureNewGatewayComponent should close the modal when the Cancel button is clicked" name="ConfigureNewGatewayComponent should close the modal when the Cancel button is clicked" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="EmptyGatewayComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:24" time="0.605" tests="1">
    <testcase classname="EmptyGatewayComponent should render the empty state with correct text and button" name="EmptyGatewayComponent should render the empty state with correct text and button" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="ApiFromFileForm" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.396" tests="7">
    <testcase classname="ApiFromFileForm renders input fields and file uploader" name="ApiFromFileForm renders input fields and file uploader" time="0.013">
    </testcase>
    <testcase classname="ApiFromFileForm validates required fields on form submission" name="ApiFromFileForm validates required fields on form submission" time="0.011">
    </testcase>
    <testcase classname="ApiFromFileForm handles file upload and updates form state" name="ApiFromFileForm handles file upload and updates form state" time="0.009">
    </testcase>
    <testcase classname="ApiFromFileForm updates input values and clears errors" name="ApiFromFileForm updates input values and clears errors" time="0.072">
    </testcase>
    <testcase classname="ApiFromFileForm calls onEnterPress when Enter is pressed" name="ApiFromFileForm calls onEnterPress when Enter is pressed" time="0.034">
    </testcase>
    <testcase classname="ApiFromFileForm resets form state when resetForm is called" name="ApiFromFileForm resets form state when resetForm is called" time="0.036">
    </testcase>
    <testcase classname="ApiFromFileForm adds tags using TagsInput" name="ApiFromFileForm adds tags using TagsInput" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="BreadcrumbComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:24" time="0.477" tests="2">
    <testcase classname="BreadcrumbComponent renders breadcrumb with project text and dropdown" name="BreadcrumbComponent renders breadcrumb with project text and dropdown" time="0.009">
    </testcase>
    <testcase classname="BreadcrumbComponent navigates to home when arrow icon is clicked" name="BreadcrumbComponent navigates to home when arrow icon is clicked" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="ImportFilesUsingLocalProjectComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.282" tests="6">
    <testcase classname="ImportFilesUsingLocalProjectComponent renders the dropdown with initial value" name="ImportFilesUsingLocalProjectComponent renders the dropdown with initial value" time="0.012">
    </testcase>
    <testcase classname="ImportFilesUsingLocalProjectComponent updates project name and validates it" name="ImportFilesUsingLocalProjectComponent updates project name and validates it" time="0.031">
    </testcase>
    <testcase classname="ImportFilesUsingLocalProjectComponent adds and removes files" name="ImportFilesUsingLocalProjectComponent adds and removes files" time="0.015">
    </testcase>
    <testcase classname="ImportFilesUsingLocalProjectComponent adds and removes tags" name="ImportFilesUsingLocalProjectComponent adds and removes tags" time="0.029">
    </testcase>
    <testcase classname="ImportFilesUsingLocalProjectComponent validates form on parent call" name="ImportFilesUsingLocalProjectComponent validates form on parent call" time="0.005">
    </testcase>
    <testcase classname="ImportFilesUsingLocalProjectComponent retrieves form values correctly" name="ImportFilesUsingLocalProjectComponent retrieves form values correctly" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ProjectDropdownComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.268" tests="2">
    <testcase classname="ProjectDropdownComponent renders combo box with project names" name="ProjectDropdownComponent renders combo box with project names" time="0.045">
    </testcase>
    <testcase classname="ProjectDropdownComponent changes selected project on user selection" name="ProjectDropdownComponent changes selected project on user selection" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="CreateNewProject" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.313" tests="7">
    <testcase classname="CreateNewProject renders the component with input fields and textarea" name="CreateNewProject renders the component with input fields and textarea" time="0.051">
    </testcase>
    <testcase classname="CreateNewProject adds a tag when Enter key is pressed" name="CreateNewProject adds a tag when Enter key is pressed" time="0.045">
    </testcase>
    <testcase classname="CreateNewProject deletes a tag when close button is clicked" name="CreateNewProject deletes a tag when close button is clicked" time="0.009">
    </testcase>
    <testcase classname="CreateNewProject validates project name correctly" name="CreateNewProject validates project name correctly" time="0.004">
    </testcase>
    <testcase classname="CreateNewProject does not show an error message when project name is valid" name="CreateNewProject does not show an error message when project name is valid" time="0.003">
    </testcase>
    <testcase classname="CreateNewProject returns the correct values via getValues" name="CreateNewProject returns the correct values via getValues" time="0.038">
    </testcase>
    <testcase classname="CreateNewProject validates form correctly via validateForm" name="CreateNewProject validates form correctly via validateForm" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="should test the DatagridActions component" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.342" tests="4">
    <testcase classname="should test the DatagridActions component should test the rendering of DatagridActions component" name="should test the DatagridActions component should test the rendering of DatagridActions component" time="0.037">
    </testcase>
    <testcase classname="should test the DatagridActions component should test the search" name="should test the DatagridActions component should test the search" time="0.044">
    </testcase>
    <testcase classname="should test the DatagridActions component should test the Filter is disabled if table is empty" name="should test the DatagridActions component should test the Filter is disabled if table is empty" time="0.003">
    </testcase>
    <testcase classname="should test the DatagridActions component should test the New API Project button opens a modal" name="should test the DatagridActions component should test the New API Project button opens a modal" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="ToolBarComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:23" time="1.77" tests="6">
    <testcase classname="ToolBarComponent renders ToolBarComponent correctly" name="ToolBarComponent renders ToolBarComponent correctly" time="0.447">
    </testcase>
    <testcase classname="ToolBarComponent calls setMinimap when Map button is clicked" name="ToolBarComponent calls setMinimap when Map button is clicked" time="0.097">
    </testcase>
    <testcase classname="ToolBarComponent calls setWordwrap when TextWrap button is clicked" name="ToolBarComponent calls setWordwrap when TextWrap button is clicked" time="0.073">
    </testcase>
    <testcase classname="ToolBarComponent calls setCopy when Copy button is clicked" name="ToolBarComponent calls setCopy when Copy button is clicked" time="0.104">
    </testcase>
    <testcase classname="ToolBarComponent calls setSaveButton when Save button is clicked" name="ToolBarComponent calls setSaveButton when Save button is clicked" time="0.095">
    </testcase>
    <testcase classname="ToolBarComponent renders menu button and its items" name="ToolBarComponent renders menu button and its items" time="0.14">
    </testcase>
  </testsuite>
  <testsuite name="ApiForm" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.376" tests="6">
    <testcase classname="ApiForm validates name and namespace fields" name="ApiForm validates name and namespace fields" time="0.015">
    </testcase>
    <testcase classname="ApiForm returns correct values from getValues()" name="ApiForm returns correct values from getValues()" time="0.081">
    </testcase>
    <testcase classname="ApiForm resets form values on resetForm()" name="ApiForm resets form values on resetForm()" time="0.045">
    </testcase>
    <testcase classname="ApiForm handles Enter key press" name="ApiForm handles Enter key press" time="0.003">
    </testcase>
    <testcase classname="ApiForm adds tags using TagsInput" name="ApiForm adds tags using TagsInput" time="0.009">
    </testcase>
    <testcase classname="ApiForm triggers handleBlur and sets validation error for empty required fields" name="ApiForm triggers handleBlur and sets validation error for empty required fields" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="EmptyLocalFolderComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:24" time="0.877" tests="3">
    <testcase classname="EmptyLocalFolderComponent renders EmptyState component with correct content" name="EmptyLocalFolderComponent renders EmptyState component with correct content" time="0.011">
    </testcase>
    <testcase classname="EmptyLocalFolderComponent opens NewProjectComponent when the &quot;Create new Project Folder&quot; button is clicked" name="EmptyLocalFolderComponent opens NewProjectComponent when the &quot;Create new Project Folder&quot; button is clicked" time="0.082">
    </testcase>
    <testcase classname="EmptyLocalFolderComponent closes NewProjectComponent when the &quot;Close&quot; button in the modal is clicked" name="EmptyLocalFolderComponent closes NewProjectComponent when the &quot;Close&quot; button in the modal is clicked" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="ToastContainer" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.322" tests="3">
    <testcase classname="ToastContainer renders toast notifications correctly" name="ToastContainer renders toast notifications correctly" time="0.026">
    </testcase>
    <testcase classname="ToastContainer calls hideToast when close button is clicked" name="ToastContainer calls hideToast when close button is clicked" time="0.106">
    </testcase>
    <testcase classname="ToastContainer renders toast without close button when `hideCloseButton` is true" name="ToastContainer renders toast without close button when `hideCloseButton` is true" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="CreateUsingRepositoryComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.246" tests="1">
    <testcase classname="CreateUsingRepositoryComponent captures form values using getValues imperative handle" name="CreateUsingRepositoryComponent captures form values using getValues imperative handle" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="OpenAPIOutlineComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.269" tests="1">
    <testcase classname="OpenAPIOutlineComponent renders without crashing" name="OpenAPIOutlineComponent renders without crashing" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="SettingsTableComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.346" tests="6">
    <testcase classname="SettingsTableComponent renders the table with data" name="SettingsTableComponent renders the table with data" time="0.009">
    </testcase>
    <testcase classname="SettingsTableComponent renders tags correctly in the table" name="SettingsTableComponent renders tags correctly in the table" time="0.021">
    </testcase>
    <testcase classname="SettingsTableComponent renders additional columns for ProjectFolderSettingsTable" name="SettingsTableComponent renders additional columns for ProjectFolderSettingsTable" time="0.027">
    </testcase>
    <testcase classname="SettingsTableComponent calls onDelete when delete button is clicked" name="SettingsTableComponent calls onDelete when delete button is clicked" time="0.064">
    </testcase>
    <testcase classname="SettingsTableComponent filters rows based on search query" name="SettingsTableComponent filters rows based on search query" time="0.033">
    </testcase>
    <testcase classname="SettingsTableComponent calls onButtonClick when the button is clicked" name="SettingsTableComponent calls onButtonClick when the button is clicked" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="LeftNavigationComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.376" tests="2">
    <testcase classname="LeftNavigationComponent should render the side navigation with correct number of items" name="LeftNavigationComponent should render the side navigation with correct number of items" time="0.087">
    </testcase>
    <testcase classname="LeftNavigationComponent should contain the correct navigation links" name="LeftNavigationComponent should contain the correct navigation links" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="CreateUsingRepositoryComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.278" tests="1">
    <testcase classname="CreateUsingRepositoryComponent captures form values using getValues imperative handle" name="CreateUsingRepositoryComponent captures form values using getValues imperative handle" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="useDirectoryHandleStore" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.137" tests="6">
    <testcase classname="useDirectoryHandleStore should initialize with default state" name="useDirectoryHandleStore should initialize with default state" time="0.003">
    </testcase>
    <testcase classname="useDirectoryHandleStore should update isStoreLoaded when setIsStoreLoaded is called" name="useDirectoryHandleStore should update isStoreLoaded when setIsStoreLoaded is called" time="0.002">
    </testcase>
    <testcase classname="useDirectoryHandleStore should call RequestFacade.addRootDirectory and update state in addRootDirectory" name="useDirectoryHandleStore should call RequestFacade.addRootDirectory and update state in addRootDirectory" time="0">
    </testcase>
    <testcase classname="useDirectoryHandleStore should test remoteRepo methods" name="useDirectoryHandleStore should test remoteRepo methods" time="0.005">
    </testcase>
    <testcase classname="useDirectoryHandleStore should not update state if RequestFacade.addRootDirectory returns undefined" name="useDirectoryHandleStore should not update state if RequestFacade.addRootDirectory returns undefined" time="0">
    </testcase>
    <testcase classname="useDirectoryHandleStore should not update state if RequestFacade.addRepository returns undefined" name="useDirectoryHandleStore should not update state if RequestFacade.addRepository returns undefined" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="TopHeaderComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.298" tests="3">
    <testcase classname="TopHeaderComponent should render the header with the correct aria-label" name="TopHeaderComponent should render the header with the correct aria-label" time="0.045">
    </testcase>
    <testcase classname="TopHeaderComponent should render the logo with the correct alt text" name="TopHeaderComponent should render the logo with the correct alt text" time="0.002">
    </testcase>
    <testcase classname="TopHeaderComponent should contain a navigation link to the home page" name="TopHeaderComponent should contain a navigation link to the home page" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="TreeComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.298" tests="1">
    <testcase classname="TreeComponent renders toast message when unable to get tree" name="TreeComponent renders toast message when unable to get tree" time="0.059">
    </testcase>
  </testsuite>
  <testsuite name="InlineToastContainer" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.286" tests="2">
    <testcase classname="InlineToastContainer renders the InlineNotification with correct props" name="InlineToastContainer renders the InlineNotification with correct props" time="0.01">
    </testcase>
    <testcase classname="InlineToastContainer hides the notification when close button is clicked" name="InlineToastContainer hides the notification when close button is clicked" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="useEditorPageStore" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.199" tests="17">
    <testcase classname="useEditorPageStore should set the activetab  " name="useEditorPageStore should set the activetab  " time="0.026">
    </testcase>
    <testcase classname="useEditorPageStore should not update the active tab" name="useEditorPageStore should not update the active tab" time="0">
    </testcase>
    <testcase classname="useEditorPageStore should open VCS the file and set active tab " name="useEditorPageStore should open VCS the file and set active tab " time="0.002">
    </testcase>
    <testcase classname="useEditorPageStore should open VCS the file and set active tab " name="useEditorPageStore should open VCS the file and set active tab " time="0.004">
    </testcase>
    <testcase classname="useEditorPageStore should open the file and set active tab " name="useEditorPageStore should open the file and set active tab " time="0.002">
    </testcase>
    <testcase classname="useEditorPageStore should open the file and set active tab " name="useEditorPageStore should open the file and set active tab " time="0.002">
    </testcase>
    <testcase classname="useEditorPageStore should open the file and create new tab and set active tab " name="useEditorPageStore should open the file and create new tab and set active tab " time="0.003">
    </testcase>
    <testcase classname="useEditorPageStore should return -1 if the remove file is not found " name="useEditorPageStore should return -1 if the remove file is not found " time="0.003">
    </testcase>
    <testcase classname="useEditorPageStore should return the updated state after removal" name="useEditorPageStore should return the updated state after removal" time="0.001">
    </testcase>
    <testcase classname="useEditorPageStore should return the updated state after removal" name="useEditorPageStore should return the updated state after removal" time="0.003">
    </testcase>
    <testcase classname="useEditorPageStore should return the deleted index when new tabs is empty" name="useEditorPageStore should return the deleted index when new tabs is empty" time="0.002">
    </testcase>
    <testcase classname="useEditorPageStore should intialze the editor tab state" name="useEditorPageStore should intialze the editor tab state" time="0.002">
    </testcase>
    <testcase classname="useEditorPageStore should intialze the editor tab state and save content" name="useEditorPageStore should intialze the editor tab state and save content" time="0.003">
    </testcase>
    <testcase classname="useEditorPageStore should intialze the editor tab state and save content" name="useEditorPageStore should intialze the editor tab state and save content" time="0.001">
    </testcase>
    <testcase classname="useEditorPageStore should return false when error occur while save" name="useEditorPageStore should return false when error occur while save" time="0.001">
    </testcase>
    <testcase classname="useEditorPageStore should reset the tabs when project switch occurs in dropdown" name="useEditorPageStore should reset the tabs when project switch occurs in dropdown" time="0.015">
    </testcase>
    <testcase classname="useEditorPageStore should test the loadDataFromIndexedDb method" name="useEditorPageStore should test the loadDataFromIndexedDb method" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="DatagridPagination" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:26" time="0.109" tests="1">
    <testcase classname="DatagridPagination renders the pagination component with correct initial values" name="DatagridPagination renders the pagination component with correct initial values" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="LocalFolderSettingsComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.13" tests="4">
    <testcase classname="LocalFolderSettingsComponent renders EmptyLocalFolderComponent when rootDirectoryHandles is empty" name="LocalFolderSettingsComponent renders EmptyLocalFolderComponent when rootDirectoryHandles is empty" time="0.002">
    </testcase>
    <testcase classname="LocalFolderSettingsComponent renders ProjectSettingsTableComponent when rootDirectoryHandles is not empty" name="LocalFolderSettingsComponent renders ProjectSettingsTableComponent when rootDirectoryHandles is not empty" time="0.001">
    </testcase>
    <testcase classname="LocalFolderSettingsComponent triggers onRefresh when &quot;Refresh Empty Folder&quot; button is clicked" name="LocalFolderSettingsComponent triggers onRefresh when &quot;Refresh Empty Folder&quot; button is clicked" time="0.001">
    </testcase>
    <testcase classname="LocalFolderSettingsComponent triggers onRefresh when &quot;Refresh Project Table&quot; button is clicked" name="LocalFolderSettingsComponent triggers onRefresh when &quot;Refresh Project Table&quot; button is clicked" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="OutlineTreeViewComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.285" tests="4">
    <testcase classname="OutlineTreeViewComponent renders without crashing when treeData is empty" name="OutlineTreeViewComponent renders without crashing when treeData is empty" time="0.004">
    </testcase>
    <testcase classname="OutlineTreeViewComponent renders tree nodes correctly" name="OutlineTreeViewComponent renders tree nodes correctly" time="0.007">
    </testcase>
    <testcase classname="OutlineTreeViewComponent sets the correct active node based on location" name="OutlineTreeViewComponent sets the correct active node based on location" time="0.005">
    </testcase>
    <testcase classname="OutlineTreeViewComponent defaults to the first node if no matching location is found" name="OutlineTreeViewComponent defaults to the first node if no matching location is found" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Should test the useVCSDataStore actions" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.117" tests="3">
    <testcase classname="Should test the useVCSDataStore actions should test the setVCSConfigData method" name="Should test the useVCSDataStore actions should test the setVCSConfigData method" time="0.001">
    </testcase>
    <testcase classname="Should test the useVCSDataStore actions should test the loadVCSDataStoreState method with invalid config data" name="Should test the useVCSDataStore actions should test the loadVCSDataStoreState method with invalid config data" time="0.004">
    </testcase>
    <testcase classname="Should test the useVCSDataStore actions should test the loadVCSDataStoreState method" name="Should test the useVCSDataStore actions should test the loadVCSDataStoreState method" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="EditorTabItemComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.295" tests="1">
    <testcase classname="EditorTabItemComponent renders EditorTabItemComponent correctly" name="EditorTabItemComponent renders EditorTabItemComponent correctly" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Utility Functions" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:26" time="0.06" tests="6">
    <testcase classname="Utility Functions getInvalidErrorMsg should return an invalid JSON error message" name="Utility Functions getInvalidErrorMsg should return an invalid JSON error message" time="0.001">
    </testcase>
    <testcase classname="Utility Functions getInvalidErrorMsg should return an invalid YAML error message" name="Utility Functions getInvalidErrorMsg should return an invalid YAML error message" time="0.003">
    </testcase>
    <testcase classname="Utility Functions getInvalidErrorMsg should return undefined for valid JSON" name="Utility Functions getInvalidErrorMsg should return undefined for valid JSON" time="0">
    </testcase>
    <testcase classname="Utility Functions getInvalidErrorMsg should return undefined for valid YAML" name="Utility Functions getInvalidErrorMsg should return undefined for valid YAML" time="0">
    </testcase>
    <testcase classname="Utility Functions createMarker should create markers for lint response" name="Utility Functions createMarker should create markers for lint response" time="0">
    </testcase>
    <testcase classname="Utility Functions createMarker should return an empty array if no lint response" name="Utility Functions createMarker should return an empty array if no lint response" time="0">
    </testcase>
  </testsuite>
  <testsuite name="showErrorMessage" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:26" time="0.045" tests="1">
    <testcase classname="showErrorMessage should call showToast with the correct parameters" name="showErrorMessage should call showToast with the correct parameters" time="0">
    </testcase>
  </testsuite>
  <testsuite name="FileExplorerComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.18" tests="2">
    <testcase classname="FileExplorerComponent renders &apos;Active project not loaded&apos; when there is no active project" name="FileExplorerComponent renders &apos;Active project not loaded&apos; when there is no active project" time="0.006">
    </testcase>
    <testcase classname="FileExplorerComponent renders TreeViewComponent when directoryHandle is loaded" name="FileExplorerComponent renders TreeViewComponent when directoryHandle is loaded" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="should test the project-listing-helper methods" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:26" time="0.059" tests="3">
    <testcase classname="should test the project-listing-helper methods should test the getTags method return an object" name="should test the project-listing-helper methods should test the getTags method return an object" time="0.002">
    </testcase>
    <testcase classname="should test the project-listing-helper methods getFormattedTimeLapsedFromLastEditedTime should return approprite time" name="should test the project-listing-helper methods getFormattedTimeLapsedFromLastEditedTime should return approprite time" time="0">
    </testcase>
    <testcase classname="should test the project-listing-helper methods should test the handleProjectClick method" name="should test the project-listing-helper methods should test the handleProjectClick method" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useAPIContextDataStore" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:26" time="0.065" tests="6">
    <testcase classname="useAPIContextDataStore should set the filehandle in context  " name="useAPIContextDataStore should set the filehandle in context  " time="0">
    </testcase>
    <testcase classname="useAPIContextDataStore should set the data for the create from scratch  " name="useAPIContextDataStore should set the data for the create from scratch  " time="0">
    </testcase>
    <testcase classname="useAPIContextDataStore should set the data for the create from file" name="useAPIContextDataStore should set the data for the create from file" time="0">
    </testcase>
    <testcase classname="useAPIContextDataStore should  create the component example " name="useAPIContextDataStore should  create the component example " time="0">
    </testcase>
    <testcase classname="useAPIContextDataStore should  update the component example " name="useAPIContextDataStore should  update the component example " time="0.001">
    </testcase>
    <testcase classname="useAPIContextDataStore should  create the component example " name="useAPIContextDataStore should  create the component example " time="0">
    </testcase>
  </testsuite>
  <testsuite name="projectStore" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:25" time="0.248" tests="11">
    <testcase classname="projectStore intializeStore - should initialize the store with valid project" name="projectStore intializeStore - should initialize the store with valid project" time="0.003">
    </testcase>
    <testcase classname="projectStore intializeStore - should retain project info if unable to load projects" name="projectStore intializeStore - should retain project info if unable to load projects" time="0">
    </testcase>
    <testcase classname="projectStore loadProjectsForParentsFolder - should load projects from given parents folder" name="projectStore loadProjectsForParentsFolder - should load projects from given parents folder" time="0.001">
    </testcase>
    <testcase classname="projectStore loadProjectsForParentsFolder - should retain project info if unable to load projects" name="projectStore loadProjectsForParentsFolder - should retain project info if unable to load projects" time="0">
    </testcase>
    <testcase classname="projectStore loadProjectsForParentsFolders - should load projects from given parents folders" name="projectStore loadProjectsForParentsFolders - should load projects from given parents folders" time="0.001">
    </testcase>
    <testcase classname="projectStore loadProjectsForParentsFolders - should retain project info if unable to load projects" name="projectStore loadProjectsForParentsFolders - should retain project info if unable to load projects" time="0">
    </testcase>
    <testcase classname="projectStore addProject - should add project" name="projectStore addProject - should add project" time="0">
    </testcase>
    <testcase classname="projectStore addProject - should retain the project list if unable to add" name="projectStore addProject - should retain the project list if unable to add" time="0.001">
    </testcase>
    <testcase classname="projectStore openProject - should set active project when opening a project" name="projectStore openProject - should set active project when opening a project" time="0.001">
    </testcase>
    <testcase classname="projectStore openProject - should not set active project" name="projectStore openProject - should not set active project" time="0.001">
    </testcase>
    <testcase classname="projectStore deleteProjects - should remove the project from store" name="projectStore deleteProjects - should remove the project from store" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AddApiTearsheet" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:22" time="3.636" tests="6">
    <testcase classname="AddApiTearsheet renders when selectedApi is set" name="AddApiTearsheet renders when selectedApi is set" time="0.326">
    </testcase>
    <testcase classname="AddApiTearsheet does not render when selectedApi is null" name="AddApiTearsheet does not render when selectedApi is null" time="0.043">
    </testcase>
    <testcase classname="AddApiTearsheet calls handleSave when primary action is clicked" name="AddApiTearsheet calls handleSave when primary action is clicked" time="0.379">
    </testcase>
    <testcase classname="AddApiTearsheet calls handleclose when secondary action is clicked" name="AddApiTearsheet calls handleclose when secondary action is clicked" time="0.301">
    </testcase>
    <testcase classname="AddApiTearsheet calls handleclose when TearsheetNarrow onClose is triggered" name="AddApiTearsheet calls handleclose when TearsheetNarrow onClose is triggered" time="0.255">
    </testcase>
    <testcase classname="AddApiTearsheet does not call API creation if form validation fails" name="AddApiTearsheet does not call API creation if form validation fails" time="0.169">
    </testcase>
  </testsuite>
  <testsuite name="ConnectToRepoComponent" errors="0" failures="0" skipped="0" timestamp="2025-02-25T08:10:18" time="7.906" tests="8">
    <testcase classname="ConnectToRepoComponent should render the component and open the modal" name="ConnectToRepoComponent should render the component and open the modal" time="0.285">
    </testcase>
    <testcase classname="ConnectToRepoComponent should handle secondary button click on step 1 (Repo selection step)" name="ConnectToRepoComponent should handle secondary button click on step 1 (Repo selection step)" time="0.367">
    </testcase>
    <testcase classname="RepoAuthComponent tests should throw validation error when input fields are empty" name="RepoAuthComponent tests should throw validation error when input fields are empty" time="0.143">
    </testcase>
    <testcase classname="RepoAuthComponent tests should throw validation error when input fields fail validation" name="RepoAuthComponent tests should throw validation error when input fields fail validation" time="0.147">
    </testcase>
    <testcase classname="RepoAuthComponent tests should move to next step if validation passed" name="RepoAuthComponent tests should move to next step if validation passed" time="0.345">
    </testcase>
    <testcase classname="RepoListingComponent tests should show table when step 1 is reached" name="RepoListingComponent tests should show table when step 1 is reached" time="0.269">
    </testcase>
    <testcase classname="RepoListingComponent tests should not close tearsheet if no repos are selected" name="RepoListingComponent tests should not close tearsheet if no repos are selected" time="0.109">
    </testcase>
    <testcase classname="RepoListingComponent tests should close tearsheet if repo is/are selected" name="RepoListingComponent tests should close tearsheet if repo is/are selected" time="0.112">
    </testcase>
  </testsuite>
</testsuites>